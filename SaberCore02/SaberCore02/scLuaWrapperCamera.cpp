#include "scLuaWrapper.h"
#include "Ogre.h"
#include "scError.h"

void exportOgreCamera( lua_State* L )
{
	using namespace luabind;
	using namespace Ogre;

	//---->>include/OgreCamera.h 
	module(L)
		[
			//--Camera
			class_<Camera>("Camera")
			.def(constructor<const String &,  Ogre::SceneManager *>())
			.def("addListener", (void (Camera::*)(Ogre::Camera::Listener *))&Camera::addListener)
			.def("removeListener", (void (Camera::*)(Ogre::Camera::Listener *))&Camera::removeListener)
			.def("getSceneManager", (SceneManager* (Camera::*)())&Camera::getSceneManager)
			.def("setPolygonMode", (void (Camera::*)(Ogre::PolygonMode))&Camera::setPolygonMode)
			.def("getPolygonMode", (PolygonMode (Camera::*)())&Camera::getPolygonMode)
			.def("setPosition", (void (Camera::*)(Real,  Real,  Real))&Camera::setPosition)
			.def("setPosition", (void (Camera::*)(const Ogre::Vector3 &))&Camera::setPosition)
			.def("getPosition", (const Vector3& (Camera::*)())&Camera::getPosition)
			.def("move", (void (Camera::*)(const Ogre::Vector3 &))&Camera::move)
			.def("moveRelative", (void (Camera::*)(const Ogre::Vector3 &))&Camera::moveRelative)
			.def("setDirection", (void (Camera::*)(Real,  Real,  Real))&Camera::setDirection)
			.def("setDirection", (void (Camera::*)(const Ogre::Vector3 &))&Camera::setDirection)
			.def("getDirection", (Vector3 (Camera::*)())&Camera::getDirection)
			.def("getUp", (Vector3 (Camera::*)())&Camera::getUp)
			.def("getRight", (Vector3 (Camera::*)())&Camera::getRight)
			.def("lookAt", (void (Camera::*)(const Ogre::Vector3 &))&Camera::lookAt)
			.def("lookAt", (void (Camera::*)(Real,  Real,  Real))&Camera::lookAt)
			.def("roll", (void (Camera::*)(const Ogre::Radian &))&Camera::roll)
			.def("yaw", (void (Camera::*)(const Ogre::Radian &))&Camera::yaw)
			.def("pitch", (void (Camera::*)(const Ogre::Radian &))&Camera::pitch)
			.def("rotate", (void (Camera::*)(const Ogre::Vector3 &,  const Ogre::Radian &))&Camera::rotate)
			.def("rotate", (void (Camera::*)(const Ogre::Quaternion &))&Camera::rotate)
			.def("setFixedYawAxis", (void (Camera::*)(bool,  const Ogre::Vector3 &))&Camera::setFixedYawAxis)
			.def("getOrientation", (const Quaternion& (Camera::*)())&Camera::getOrientation)
			.def("setOrientation", (void (Camera::*)(const Ogre::Quaternion &))&Camera::setOrientation)
			.def("_renderScene", (void (Camera::*)(Ogre::Viewport *,  bool))&Camera::_renderScene)
			.def("_notifyRenderedFaces", (void (Camera::*)(unsigned int))&Camera::_notifyRenderedFaces)
			.def("_notifyRenderedBatches", (void (Camera::*)(unsigned int))&Camera::_notifyRenderedBatches)
			.def("_getNumRenderedFaces", (unsigned int (Camera::*)())&Camera::_getNumRenderedFaces)
			.def("_getNumRenderedBatches", (unsigned int (Camera::*)())&Camera::_getNumRenderedBatches)
			.def("getDerivedOrientation", (const Quaternion& (Camera::*)())&Camera::getDerivedOrientation)
			.def("getDerivedPosition", (const Vector3& (Camera::*)())&Camera::getDerivedPosition)
			.def("getDerivedDirection", (Vector3 (Camera::*)())&Camera::getDerivedDirection)
			.def("getDerivedUp", (Vector3 (Camera::*)())&Camera::getDerivedUp)
			.def("getDerivedRight", (Vector3 (Camera::*)())&Camera::getDerivedRight)
			.def("getRealOrientation", (const Quaternion& (Camera::*)())&Camera::getRealOrientation)
			.def("getRealPosition", (const Vector3& (Camera::*)())&Camera::getRealPosition)
			.def("getRealDirection", (Vector3 (Camera::*)())&Camera::getRealDirection)
			.def("getRealUp", (Vector3 (Camera::*)())&Camera::getRealUp)
			.def("getRealRight", (Vector3 (Camera::*)())&Camera::getRealRight)
			.def("getWorldTransforms", (void (Camera::*)(Ogre::Matrix4 *))&Camera::getWorldTransforms)
			.def("getMovableType", (const String& (Camera::*)())&Camera::getMovableType)
			.def("setAutoTracking", (void (Camera::*)(bool,  Ogre::SceneNode *const,  const Ogre::Vector3 &))&Camera::setAutoTracking)
			.def("setLodBias", (void (Camera::*)(Real))&Camera::setLodBias)
			.def("getLodBias", (Real (Camera::*)())&Camera::getLodBias)
			.def("setLodCamera", (void (Camera::*)(const Ogre::Camera *))&Camera::setLodCamera)
			.def("getLodCamera", (const Camera* (Camera::*)())&Camera::getLodCamera)
			//.def("getCameraToViewportRay", (Ray (Camera::*)(Real,  Real))&Camera::getCameraToViewportRay)
			//.def("getCameraToViewportRay", (void (Camera::*)(Real,  Real,  Ogre::Ray *))&Camera::getCameraToViewportRay)
			.def("getCameraToViewportBoxVolume", (PlaneBoundedVolume (Camera::*)(Real,  Real,  Real,  Real,  bool))&Camera::getCameraToViewportBoxVolume)
			.def("getCameraToViewportBoxVolume", (void (Camera::*)(Real,  Real,  Real,  Real,  Ogre::PlaneBoundedVolume *,  bool))&Camera::getCameraToViewportBoxVolume)
			.def("_getLodBiasInverse", (Real (Camera::*)())&Camera::_getLodBiasInverse)
			.def("_autoTrack", (void (Camera::*)())&Camera::_autoTrack)
			.def("setWindow", (void (Camera::*)(Real,  Real,  Real,  Real))&Camera::setWindow)
			.def("resetWindow", (void (Camera::*)())&Camera::resetWindow)
			.def("isWindowSet", (bool (Camera::*)())&Camera::isWindowSet)
			.def("getWindowPlanes", (const vector<Plane>::type& (Camera::*)())&Camera::getWindowPlanes)
			.def("getBoundingRadius", (Real (Camera::*)())&Camera::getBoundingRadius)
			.def("getAutoTrackTarget", (SceneNode* (Camera::*)())&Camera::getAutoTrackTarget)
			.def("getAutoTrackOffset", (const Vector3& (Camera::*)())&Camera::getAutoTrackOffset)
			.def("getViewport", (Viewport* (Camera::*)())&Camera::getViewport)
			.def("_notifyViewport", (void (Camera::*)(Ogre::Viewport *))&Camera::_notifyViewport)
			.def("setAutoAspectRatio", (void (Camera::*)(bool))&Camera::setAutoAspectRatio)
			.def("getAutoAspectRatio", (bool (Camera::*)())&Camera::getAutoAspectRatio)
			.def("setCullingFrustum", (void (Camera::*)(Ogre::Frustum *))&Camera::setCullingFrustum)
			.def("getCullingFrustum", (Frustum* (Camera::*)())&Camera::getCullingFrustum)
			.def("forwardIntersect", (void (Camera::*)(const Ogre::Plane &,  vector<Vector4>::type *))&Camera::forwardIntersect)
			//.def("isVisible", (bool (Camera::*)(const Ogre::AxisAlignedBox &,  Ogre::FrustumPlane *))&Camera::isVisible)
			//.def("isVisible", (bool (Camera::*)(const Ogre::Sphere &,  Ogre::FrustumPlane *))&Camera::isVisible)
			//.def("isVisible", (bool (Camera::*)(const Ogre::Vector3 &,  Ogre::FrustumPlane *))&Camera::isVisible)
			.def("getWorldSpaceCorners", (const Vector3* (Camera::*)())&Camera::getWorldSpaceCorners)
			.def("getFrustumPlane", (const Plane& (Camera::*)(unsigned short))&Camera::getFrustumPlane)
			.def("projectSphere", (bool (Camera::*)(const Ogre::Sphere &,  Real *,  Real *,  Real *,  Real *))&Camera::projectSphere)
			.def("getNearClipDistance", (Real (Camera::*)())&Camera::getNearClipDistance)
			.def("getFarClipDistance", (Real (Camera::*)())&Camera::getFarClipDistance)
			//.def("getViewMatrix", (const Matrix4& (Camera::*)())&Camera::getViewMatrix)
			//.def("getViewMatrix", (const Matrix4& (Camera::*)(bool))&Camera::getViewMatrix)
			.def("setUseRenderingDistance", (void (Camera::*)(bool))&Camera::setUseRenderingDistance)
			.def("getUseRenderingDistance", (bool (Camera::*)())&Camera::getUseRenderingDistance)
			.def("synchroniseBaseSettingsWith", (void (Camera::*)(const Ogre::Camera *))&Camera::synchroniseBaseSettingsWith)
			.def("getPositionForViewUpdate", (const Vector3& (Camera::*)())&Camera::getPositionForViewUpdate)
			.def("getOrientationForViewUpdate", (const Quaternion& (Camera::*)())&Camera::getOrientationForViewUpdate)
			//高版本才支持.def("setUseMinPixelSize", (void (Camera::*)(bool))&Camera::setUseMinPixelSize)
			//高版本才支持.def("getUseMinPixelSize", (bool (Camera::*)())&Camera::getUseMinPixelSize)
			//高版本才支持.def("getPixelDisplayRatio", (Real (Camera::*)())&Camera::getPixelDisplayRatio)
		];
	//<<----include/OgreCamera.h
}